{{- $secretName := printf "%s-certs" (include "common.names.fullname" .) }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" .Values.rabbitmq.commonLabels "context" $ ) | nindent 4 }}
  {{- if .Values.rabbitmq.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.rabbitmq.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
type: kubernetes.io/tls
data:
  {{- $ca := genCA "rabbitmq-internal-ca" 365 }}
  {{- $fullname := include "common.names.fullname" . }}
  {{- $releaseNamespace := .Release.Namespace }}
  {{- $clusterDomain := .Values.rabbitmq.clusterDomain }}
  {{- $serviceName := include "common.names.fullname" . }}
  {{- $altNames := list (printf "*.%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) (printf "%s.%s.svc.%s" $serviceName $releaseNamespace $clusterDomain) $fullname  .Values.rabbitmq.auth.tls.extraAltNames }}
  {{- $cert := genSignedCert $fullname nil $altNames 365 $ca }}
  tls.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.crt" "defaultValue" $cert.Cert "context" $) }}
  tls.key: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "tls.key" "defaultValue" $cert.Key "context" $) }}
  ca.crt: {{ include "common.secrets.lookup" (dict "secret" $secretName "key" "ca.crt" "defaultValue" $ca.Cert "context" $) }}
